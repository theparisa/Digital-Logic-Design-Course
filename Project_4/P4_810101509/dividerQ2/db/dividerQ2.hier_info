|dividerQ2
clk => clk.IN2
rst => rst.IN2
start => start.IN1
Abus[0] => Abus[0].IN1
Abus[1] => Abus[1].IN1
Abus[2] => Abus[2].IN1
Abus[3] => Abus[3].IN1
Abus[4] => Abus[4].IN1
Abus[5] => Abus[5].IN1
Abus[6] => Abus[6].IN1
Abus[7] => Abus[7].IN1
Abus[8] => Abus[8].IN1
Bbus[0] => Bbus[0].IN1
Bbus[1] => Bbus[1].IN1
Bbus[2] => Bbus[2].IN1
Bbus[3] => Bbus[3].IN1
Bbus[4] => Bbus[4].IN1
Bbus[5] => Bbus[5].IN1
Bbus[6] => Bbus[6].IN1
Bbus[7] => Bbus[7].IN1
Bbus[8] => Bbus[8].IN1
Qbus[0] << datapath:d.port13
Qbus[1] << datapath:d.port13
Qbus[2] << datapath:d.port13
Qbus[3] << datapath:d.port13
Qbus[4] << datapath:d.port13
Qbus[5] << datapath:d.port13
Qbus[6] << datapath:d.port13
Qbus[7] << datapath:d.port13
Qbus[8] << datapath:d.port13
Rbus[0] << datapath:d.port14
Rbus[1] << datapath:d.port14
Rbus[2] << datapath:d.port14
Rbus[3] << datapath:d.port14
Rbus[4] << datapath:d.port14
Rbus[5] << datapath:d.port14
Rbus[6] << datapath:d.port14
Rbus[7] << datapath:d.port14
Rbus[8] << datapath:d.port14
ready << controller:c.port14


|dividerQ2|datapath:d
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => Qreg[0].CLK
clk => Qreg[1].CLK
clk => Qreg[2].CLK
clk => Qreg[3].CLK
clk => Qreg[4].CLK
clk => Qreg[5].CLK
clk => Qreg[6].CLK
clk => Qreg[7].CLK
clk => Qreg[8].CLK
clk => Areg[0].CLK
clk => Areg[1].CLK
clk => Areg[2].CLK
clk => Areg[3].CLK
clk => Areg[4].CLK
clk => Areg[5].CLK
clk => Areg[6].CLK
clk => Areg[7].CLK
clk => Areg[8].CLK
clk => shiftedAQ[1].CLK
clk => shiftedAQ[2].CLK
clk => shiftedAQ[3].CLK
clk => shiftedAQ[4].CLK
clk => shiftedAQ[5].CLK
clk => shiftedAQ[6].CLK
clk => shiftedAQ[7].CLK
clk => shiftedAQ[8].CLK
clk => shiftedAQ[9].CLK
clk => shiftedAQ[10].CLK
clk => shiftedAQ[11].CLK
clk => shiftedAQ[12].CLK
clk => shiftedAQ[13].CLK
clk => shiftedAQ[14].CLK
clk => shiftedAQ[15].CLK
clk => Mreg[0].CLK
clk => Mreg[1].CLK
clk => Mreg[2].CLK
clk => Mreg[3].CLK
clk => Mreg[4].CLK
clk => Mreg[5].CLK
clk => Mreg[6].CLK
clk => Mreg[7].CLK
clk => Mreg[8].CLK
rst => count[0]~reg0.ACLR
rst => count[1]~reg0.ACLR
rst => count[2]~reg0.ACLR
rst => count[3]~reg0.ACLR
rst => Qreg[0].ACLR
rst => Qreg[1].ACLR
rst => Qreg[2].ACLR
rst => Qreg[3].ACLR
rst => Qreg[4].ACLR
rst => Qreg[5].ACLR
rst => Qreg[6].ACLR
rst => Qreg[7].ACLR
rst => Qreg[8].ACLR
rst => Areg[0].ACLR
rst => Areg[1].ACLR
rst => Areg[2].ACLR
rst => Areg[3].ACLR
rst => Areg[4].ACLR
rst => Areg[5].ACLR
rst => Areg[6].ACLR
rst => Areg[7].ACLR
rst => Areg[8].ACLR
rst => shiftedAQ[1].ACLR
rst => shiftedAQ[2].ACLR
rst => shiftedAQ[3].ACLR
rst => shiftedAQ[4].ACLR
rst => shiftedAQ[5].ACLR
rst => shiftedAQ[6].ACLR
rst => shiftedAQ[7].ACLR
rst => shiftedAQ[8].ACLR
rst => shiftedAQ[9].ACLR
rst => shiftedAQ[10].ACLR
rst => shiftedAQ[11].ACLR
rst => shiftedAQ[12].ACLR
rst => shiftedAQ[13].ACLR
rst => shiftedAQ[14].ACLR
rst => shiftedAQ[15].ACLR
rst => Mreg[0].ACLR
rst => Mreg[1].ACLR
rst => Mreg[2].ACLR
rst => Mreg[3].ACLR
rst => Mreg[4].ACLR
rst => Mreg[5].ACLR
rst => Mreg[6].ACLR
rst => Mreg[7].ACLR
rst => Mreg[8].ACLR
loadA => Areg.OUTPUTSELECT
loadA => Areg.OUTPUTSELECT
loadA => Areg.OUTPUTSELECT
loadA => Areg.OUTPUTSELECT
loadA => Areg.OUTPUTSELECT
loadA => Areg.OUTPUTSELECT
loadA => Areg.OUTPUTSELECT
loadA => Areg.OUTPUTSELECT
loadA => Areg.OUTPUTSELECT
loadM => Mreg[8].ENA
loadM => Mreg[7].ENA
loadM => Mreg[6].ENA
loadM => Mreg[5].ENA
loadM => Mreg[4].ENA
loadM => Mreg[3].ENA
loadM => Mreg[2].ENA
loadM => Mreg[1].ENA
loadM => Mreg[0].ENA
loadQ => Qreg.OUTPUTSELECT
loadQ => Qreg.OUTPUTSELECT
loadQ => Qreg.OUTPUTSELECT
loadQ => Qreg.OUTPUTSELECT
loadQ => Qreg.OUTPUTSELECT
loadQ => Qreg.OUTPUTSELECT
loadQ => Qreg.OUTPUTSELECT
loadQ => Qreg.OUTPUTSELECT
loadQ => Qreg.OUTPUTSELECT
PQ => Qreg.OUTPUTSELECT
PQ => Qreg.OUTPUTSELECT
PQ => Qreg.OUTPUTSELECT
PQ => Qreg.OUTPUTSELECT
PQ => Qreg.OUTPUTSELECT
PQ => Qreg.OUTPUTSELECT
PQ => Qreg.OUTPUTSELECT
PQ => Qreg.OUTPUTSELECT
PQ => Qreg.OUTPUTSELECT
PA => Areg.OUTPUTSELECT
PA => Areg.OUTPUTSELECT
PA => Areg.OUTPUTSELECT
PA => Areg.OUTPUTSELECT
PA => Areg.OUTPUTSELECT
PA => Areg.OUTPUTSELECT
PA => Areg.OUTPUTSELECT
PA => Areg.OUTPUTSELECT
PA => Areg.OUTPUTSELECT
initA0 => Areg.OUTPUTSELECT
initA0 => Areg.OUTPUTSELECT
initA0 => Areg.OUTPUTSELECT
initA0 => Areg.OUTPUTSELECT
initA0 => Areg.OUTPUTSELECT
initA0 => Areg.OUTPUTSELECT
initA0 => Areg.OUTPUTSELECT
initA0 => Areg.OUTPUTSELECT
initA0 => Areg.OUTPUTSELECT
init_counter => count.OUTPUTSELECT
init_counter => count.OUTPUTSELECT
init_counter => count.OUTPUTSELECT
init_counter => count.OUTPUTSELECT
shift => shiftedAQ[15].ENA
shift => shiftedAQ[14].ENA
shift => shiftedAQ[13].ENA
shift => shiftedAQ[12].ENA
shift => shiftedAQ[11].ENA
shift => shiftedAQ[10].ENA
shift => shiftedAQ[9].ENA
shift => shiftedAQ[8].ENA
shift => shiftedAQ[7].ENA
shift => shiftedAQ[6].ENA
shift => shiftedAQ[5].ENA
shift => shiftedAQ[4].ENA
shift => shiftedAQ[3].ENA
shift => shiftedAQ[2].ENA
shift => shiftedAQ[1].ENA
dec_counter => count.OUTPUTSELECT
dec_counter => count.OUTPUTSELECT
dec_counter => count.OUTPUTSELECT
dec_counter => count.OUTPUTSELECT
Abus[0] => Qreg.DATAB
Abus[1] => Qreg.DATAB
Abus[2] => Qreg.DATAB
Abus[3] => Qreg.DATAB
Abus[4] => Qreg.DATAB
Abus[5] => Qreg.DATAB
Abus[6] => Qreg.DATAB
Abus[7] => Qreg.DATAB
Abus[8] => Qreg.DATAB
Bbus[0] => Mreg[0].DATAIN
Bbus[1] => Mreg[1].DATAIN
Bbus[2] => Mreg[2].DATAIN
Bbus[3] => Mreg[3].DATAIN
Bbus[4] => Mreg[4].DATAIN
Bbus[5] => Mreg[5].DATAIN
Bbus[6] => Mreg[6].DATAIN
Bbus[7] => Mreg[7].DATAIN
Bbus[8] => Mreg[8].DATAIN
Qbus[0] <= Qreg[0].DB_MAX_OUTPUT_PORT_TYPE
Qbus[1] <= Qreg[1].DB_MAX_OUTPUT_PORT_TYPE
Qbus[2] <= Qreg[2].DB_MAX_OUTPUT_PORT_TYPE
Qbus[3] <= Qreg[3].DB_MAX_OUTPUT_PORT_TYPE
Qbus[4] <= Qreg[4].DB_MAX_OUTPUT_PORT_TYPE
Qbus[5] <= Qreg[5].DB_MAX_OUTPUT_PORT_TYPE
Qbus[6] <= Qreg[6].DB_MAX_OUTPUT_PORT_TYPE
Qbus[7] <= Qreg[7].DB_MAX_OUTPUT_PORT_TYPE
Qbus[8] <= Qreg[8].DB_MAX_OUTPUT_PORT_TYPE
Rbus[0] <= Areg[0].DB_MAX_OUTPUT_PORT_TYPE
Rbus[1] <= Areg[1].DB_MAX_OUTPUT_PORT_TYPE
Rbus[2] <= Areg[2].DB_MAX_OUTPUT_PORT_TYPE
Rbus[3] <= Areg[3].DB_MAX_OUTPUT_PORT_TYPE
Rbus[4] <= Areg[4].DB_MAX_OUTPUT_PORT_TYPE
Rbus[5] <= Areg[5].DB_MAX_OUTPUT_PORT_TYPE
Rbus[6] <= Areg[6].DB_MAX_OUTPUT_PORT_TYPE
Rbus[7] <= Areg[7].DB_MAX_OUTPUT_PORT_TYPE
Rbus[8] <= Areg[8].DB_MAX_OUTPUT_PORT_TYPE
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
signbit <= Add2.DB_MAX_OUTPUT_PORT_TYPE


|dividerQ2|controller:c
clk => ps~1.DATAIN
rst => ps~3.DATAIN
start => Selector1.IN2
start => Selector0.IN1
start => ns.load.DATAB
signbit => ns.restore.DATAB
signbit => Selector3.IN2
count[0] => WideOr0.IN0
count[1] => WideOr0.IN1
count[2] => WideOr0.IN2
count[3] => WideOr0.IN3
loadA <= loadA.DB_MAX_OUTPUT_PORT_TYPE
loadM <= loadQ.DB_MAX_OUTPUT_PORT_TYPE
loadQ <= loadQ.DB_MAX_OUTPUT_PORT_TYPE
PQ <= PQ.DB_MAX_OUTPUT_PORT_TYPE
PA <= PQ.DB_MAX_OUTPUT_PORT_TYPE
initA0 <= init_counter.DB_MAX_OUTPUT_PORT_TYPE
init_counter <= init_counter.DB_MAX_OUTPUT_PORT_TYPE
shift <= shift.DB_MAX_OUTPUT_PORT_TYPE
dec_counter <= dec_counter.DB_MAX_OUTPUT_PORT_TYPE
ready <= ready.DB_MAX_OUTPUT_PORT_TYPE


